{"version":3,"sources":["OpencastRest.ts","components/Loading.tsx","utils.ts","components/Series.tsx","components/EditForm.tsx","components/JobList.tsx","components/Upload.tsx","components/Welcome.tsx","i18n.ts","App.tsx","index.tsx"],"names":["findField","id","metadata","fields","find","f","collectionToPairs","c","Object","keys","map","k","debug","window","location","search","includes","hostAndPort","eventId","a","useEventId","undefined","axios","get","response","data","targetSeries","post","searchEpisode","limit","offset","episodeId","seriesId","seriesName","urlSuffix","resultsRaw","results","Array","isArray","result","dcCreator","dcTitle","dcCreated","languageShortCode","dcLanguage","licenseKey","dcLicense","mediapackage","creators","creator","attachments","attachment","type","url","total","delete","roles","split","r","title","status","presenterFile","captionFile","FormData","append","JSON","stringify","Loading","t","icon","faSpinner","spin","parsedQueryString","parseQuery","SeriesEpisode","episode","deleteCallback","editCallback","imageAttachment","endsWith","image","className","onClick","_","href","alt","src","Date","toLocaleString","e","stopPropagation","faTrash","faEdit","TranslatedSeries","props","state","httpErrors","currentPage","pageNumber","this","unsetDeletionState","setState","loadCurrentPage","qs","series","series_name","then","searchResults","catch","error","concat","message","deleteSuccess","seriesSuffix","debugSuffix","confirm","deleteEvent","deletion","edit","getLti","lti","ltiRoles","length","sr","headingOpts","range","begin","Math","min","end","Helmet","key","isInstructor","hasDeletion","deleteEventCallback","bind","hasEdit","editEpisodeCallback","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","innerClass","onChange","handlePageChange","React","Component","Series","withTranslation","allowedFields","collectionToOptions","collection","translatable","s","v","startsWith","parse","label","value","MetadataFieldReadOnly","field","style","fontStyle","join","currentValue","o","MetadataFieldInner","valueChange","readOnly","currentTarget","isMulti","isClearable","options","placeholder","MetadataField","htmlFor","TranslatedEditForm","files","onPresenterFileChange","onCaptionFileChange","newValue","onDataChange","filter","fieldValueChange","withUpload","onChangePresenterFile","onChangeCaptionFile","hasSubmit","onSubmit","disabled","pending","EditForm","TranslatedJobList","getJobs","jobs","retrieveJobs","jobsTimerId","setInterval","jobsTimer","clearInterval","job","JobList","isMetadata","TranslatedUpload","episode_id","uploadState","copyState","seriesField","fieldValue","pop","getEventMetadata","metadataCollection","resolveSeries","initial","edited","console","log","uploadFile","newFile","newData","seriesCollection","findFieldCollection","copySeries","copyEventToSeries","lockedString","locked","seriesItems","isSearchable","onChangeCopyTarget","onMoveToSeries","Upload","Welcome","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translations","enJson","da","daJson","de","deJson","el","elJson","es","esJson","fr","frJson","gl","glJson","he","heJson","it","itJson","nl","nlJson","pl","plJson","sl","slJson","sv","svJson","tr","trJson","zh","zhJson","fallbackLng","ns","defaultNS","interpolation","escapeValue","App","qsParsed","subtool","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea51578b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport interface Attachment {\n    readonly type: string;\n    readonly url: string;\n}\n\nexport interface JobResult {\n    readonly title: string;\n    readonly status: string;\n}\n\nexport interface MediaPackage {\n    readonly attachments: Attachment[];\n    readonly creators: string[];\n}\n\nexport interface SearchEpisodeResult {\n    readonly dcCreator: string;\n    readonly id: string;\n    readonly dcTitle: string;\n    readonly dcCreated: string;\n    readonly mediapackage: MediaPackage;\n    readonly languageShortCode: string;\n    readonly licenseKey: string;\n}\n\nexport interface SearchEpisodeResults {\n    readonly results: SearchEpisodeResult[];\n    readonly total: number;\n    readonly limit: number;\n    readonly offset: number;\n}\n\nexport type EventMetadataCollection = {\n    [name: string]: string\n};\n\nexport interface EventMetadataField {\n    readonly readOnly: boolean;\n    readonly translatable: boolean;\n    readonly id: string;\n    readonly label: string;\n    readonly type: \"text\" | \"text_long\" | \"ordered_text\" | \"mixed_text\" | \"date\";\n    readonly value: string | string[];\n    readonly required: boolean;\n    readonly collection?: EventMetadataCollection;\n}\n\nexport interface EventMetadataContainer {\n    readonly flavor: string;\n    readonly locked?: string;\n    readonly title: string;\n    readonly fields: EventMetadataField[];\n}\n\nexport interface LtiData {\n    readonly roles: string[];\n}\n\nexport function findField(\n    id: string,\n    metadata: EventMetadataContainer): EventMetadataField | undefined {\n    return metadata.fields.find((f: EventMetadataField) => f.id === id);\n}\n\nexport function findFieldValue(\n    id: string,\n    metadata: EventMetadataContainer): string | string[] | undefined {\n    const result = findField(id, metadata);\n    if (result === undefined)\n        return undefined;\n    return result.value;\n}\n\nexport function findFieldSingleValue(\n    id: string,\n    metadata: EventMetadataContainer): string | undefined {\n    const result = findFieldValue(id, metadata);\n    if (result === undefined)\n        return;\n    return typeof result === \"string\" ? result : undefined;\n}\n\nexport function isMultiValue(v: string | string[]): v is string[] {\n    return typeof v === 'object';\n}\n\nexport function isSingleValue(v: string | string[]): v is string {\n    return typeof v === 'string';\n}\n\nexport function findFieldMultiValue(\n    id: string,\n    metadata: EventMetadataContainer): string[] | undefined {\n    const result = findFieldValue(id, metadata);\n    if (result === undefined)\n        return;\n    if (!isMultiValue(result))\n        return;\n    return result;\n}\n\nexport function findFieldCollection(\n    id: string,\n    metadata: EventMetadataContainer): EventMetadataCollection | undefined {\n    const field = findField(id, metadata);\n    return field === undefined ? undefined : field.collection;\n}\n\nexport function collectionToPairs(c: EventMetadataCollection): [string, string][] {\n    return Object.keys(c).map((k) => [k, c[k]]);\n}\n\nconst debug = window.location.search.includes(\"&debug=true\");\n\nfunction hostAndPort() {\n    return debug ? \"http://localhost:7878\" : \"\";\n}\n\nexport async function getEventMetadata(eventId?: string): Promise<EventMetadataContainer[]> {\n    const useEventId = eventId === undefined ? \"new\" : eventId;\n    const response = await axios.get(hostAndPort() + \"/lti-service-gui/\" + useEventId + \"/metadata\");\n    return response.data;\n}\n\nexport async function copyEventToSeries(eventId: string, targetSeries: string): Promise<{}> {\n    return axios.post(hostAndPort() + \"/lti-service-gui/\" + eventId + \"/copy?target_series=\" + targetSeries);\n}\n\nexport async function searchEpisode(\n    limit: number,\n    offset: number,\n    episodeId?: string,\n    seriesId?: string,\n    seriesName?: string): Promise<SearchEpisodeResults> {\n    let urlSuffix = \"\";\n    if (seriesId !== undefined)\n        urlSuffix += \"&sid=\" + seriesId;\n    if (seriesName !== undefined)\n        urlSuffix += \"&sname=\" + seriesName;\n    if (episodeId !== undefined)\n        urlSuffix += \"&id=\" + episodeId;\n    const response = await axios.get(`${hostAndPort()}/search/episode.json?limit=${limit}&offset=${offset}${urlSuffix}`);\n    const resultsRaw = response.data[\"search-results\"][\"result\"];\n    const results = Array.isArray(resultsRaw) ? resultsRaw : resultsRaw !== undefined ? [resultsRaw] : [];\n    return {\n        results: results.map((result: any) => ({\n            dcCreator: result.dcCreator,\n            id: result.id,\n            dcTitle: result.dcTitle,\n            dcCreated: result.dcCreated,\n            languageShortCode: result.dcLanguage,\n            licenseKey: result.dcLicense,\n            mediapackage: {\n                creators: result.mediapackage.creators !== undefined ? result.mediapackage.creators.creator : [],\n                attachments: result.mediapackage.attachments.attachment.map((attachment: any) => ({\n                    type: attachment.type,\n                    url: attachment.url\n                }))\n            }\n        })),\n        total: response.data[\"search-results\"].total,\n        limit: response.data[\"search-results\"].limit,\n        offset: response.data[\"search-results\"].offset\n    }\n}\n\nexport async function deleteEvent(eventId: string): Promise<void> {\n    return axios.delete(hostAndPort() + \"/lti-service-gui/\" + eventId);\n}\n\nexport async function getLti(): Promise<LtiData> {\n    const response = await axios.get(hostAndPort() + \"/lti\");\n    return {\n        roles: response.data.roles !== undefined ? response.data.roles.split(\",\") : [],\n    }\n}\n\nexport async function getJobs(seriesId: string): Promise<JobResult[]> {\n    const response = await axios.get(hostAndPort() + \"/lti-service-gui/jobs?seriesId=\" + seriesId);\n    return response.data.map((r: any) => ({ title: r.title, status: r.status }));\n}\n\nexport async function uploadFile(\n    metadata: EventMetadataContainer,\n    seriesId: string,\n    eventId?: string,\n    presenterFile?: Blob,\n    captionFile?: Blob): Promise<{}> {\n    const data = new FormData();\n    data.append(\"metadata\", JSON.stringify([metadata]));\n    if (eventId !== undefined)\n        data.append(\"eventId\", eventId);\n    data.append(\"seriesId\", seriesId);\n    if (captionFile !== undefined)\n        data.append(\"captions\", captionFile);\n    if (presenterFile !== undefined)\n        data.append(\"presenter\", presenterFile);\n    return axios.post(hostAndPort() + \"/lti-service-gui\", data);\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport i18next from \"i18next\";\n\nexport const Loading: React.SFC<{ t: i18next.TFunction }> = ({ t }) => <div>\n    <FontAwesomeIcon icon={faSpinner} spin />\n    <span>{t(\"LTI.LOADING\")}</span>\n</div>;\n","import { parse as parseQuery } from \"query-string\";\n\nexport function parsedQueryString() {\n    return parseQuery(window.location.search);\n}\n","import React from \"react\";\nimport { SearchEpisodeResults, searchEpisode, getLti, SearchEpisodeResult, deleteEvent } from \"../OpencastRest\";\nimport { Loading } from \"./Loading\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport \"../App.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Pagination from \"react-js-pagination\";\nimport Helmet from \"react-helmet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport i18next from \"i18next\";\nimport { parsedQueryString } from \"../utils\";\n\ninterface SeriesState {\n    readonly searchResults?: SearchEpisodeResults;\n    readonly ltiRoles?: string[];\n    readonly httpErrors: string[];\n    readonly currentPage: number;\n    readonly deleteSuccess?: boolean;\n}\n\ninterface SeriesProps extends WithTranslation {\n}\n\ninterface EpisodeProps {\n    readonly episode: SearchEpisodeResult;\n    readonly deleteCallback?: (episodeId: string) => void;\n    readonly editCallback?: (episodeId: string) => void;\n    readonly t: i18next.TFunction;\n}\n\nconst SeriesEpisode: React.StatelessComponent<EpisodeProps> = ({ episode, deleteCallback, editCallback, t }) => {\n    const attachments = episode.mediapackage.attachments;\n    const imageAttachment = attachments.find((a) => a.type.endsWith(\"/search+preview\"));\n    const image = imageAttachment !== undefined ? imageAttachment.url : \"\";\n    return <div\n        className=\"list-group-item list-group-item-action d-flex justify-content-start align-items-center episode-item\"\n        onClick={(_) => { window.location.href = \"/play/\" + episode.id; }}>\n        <div>\n            <img alt=\"Preview\" className=\"img-fluid\" src={image} />\n        </div>\n        <div className=\"ml-3\">\n            <h4>{episode.dcTitle}</h4>\n            {episode.dcCreator !== undefined && <p className=\"text-muted\">\n                {t(\"LTI.CREATOR\", { creator: episode.dcCreator })}\n            </p>}\n            <p className=\"text-muted\">{new Date(episode.dcCreated).toLocaleString()}</p>\n        </div>\n        {(deleteCallback !== undefined || editCallback !== undefined) &&\n            <div className=\"ml-auto\">\n                {deleteCallback !== undefined &&\n                    <button onClick={(e) => { deleteCallback(episode.id); e.stopPropagation(); }}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </button>}\n                {editCallback !== undefined &&\n                    <button onClick={(e) => { editCallback(episode.id); e.stopPropagation(); }}>\n                        <FontAwesomeIcon icon={faEdit} />\n                    </button>}\n            </div>}\n    </div>;\n}\n\nconst EPISONDES_PER_PAGE:number = 15;\n\nclass TranslatedSeries extends React.Component<SeriesProps, SeriesState> {\n    constructor(props: SeriesProps) {\n        super(props);\n        this.state = {\n            httpErrors: [],\n            currentPage: 1,\n        };\n    }\n\n    handlePageChange(pageNumber: number) {\n        this.unsetDeletionState();\n        this.setState({\n            ...this.state,\n            currentPage: pageNumber\n        });\n        this.loadCurrentPage(pageNumber);\n    }\n\n    loadCurrentPage(pageNumber: number = 1) {\n        const qs = parsedQueryString();\n\n        searchEpisode(\n            EPISONDES_PER_PAGE,\n            (pageNumber - 1) * EPISONDES_PER_PAGE,\n            undefined,\n            typeof qs.series === \"string\" ? qs.series : undefined,\n            typeof qs.series_name === \"string\" ? qs.series_name : undefined\n        ).then((results) => this.setState({\n            ...this.state,\n            searchResults: results\n        })).catch((error) => this.setState({\n            ...this.state,\n            httpErrors: this.state.httpErrors.concat([error.message])\n        }));\n    }\n\n    unsetDeletionState() {\n        this.setState({\n            ...this.state,\n            deleteSuccess: undefined\n        });\n    }\n\n    editEpisodeCallback(id: string) {\n        const qs = parsedQueryString();\n        let seriesSuffix = typeof qs.series === \"string\" ? \"&series=\" + qs.series : \"\";\n        if (typeof qs.series_name === \"string\")\n            seriesSuffix = \"&series_name=\" + qs.series_name;\n        const debugSuffix = typeof qs.debug === \"string\" ? \"&debug=\" + qs.debug : \"\";\n        window.location.href = \"/ltitools/index.html?subtool=upload&episode_id=\" + id + seriesSuffix + debugSuffix;\n    }\n\n    deleteEventCallback(id: string) {\n        this.unsetDeletionState();\n        if (window.confirm(this.props.t(\"LTI.CONFIRM_DELETION\")) === false)\n            return;\n        deleteEvent(id).then((_) => {\n            this.setState({\n                ...this.state,\n                deleteSuccess: true\n            });\n        }).catch((_) => {\n            this.setState({\n                ...this.state,\n                deleteSuccess: false\n            });\n        });\n    }\n\n    hasDeletion() {\n        return parsedQueryString().deletion === \"true\";\n    }\n\n    hasEdit() {\n        return parsedQueryString().edit === \"true\";\n    }\n\n    componentDidMount() {\n        this.loadCurrentPage();\n        getLti().then((lti) => this.setState({\n            ...this.state,\n            ltiRoles: lti.roles\n        })).catch((error) => this.setState({\n            ...this.state,\n            httpErrors: this.state.httpErrors.concat([`LTI: ${error.message}`])\n        }))\n    }\n\n    isInstructor() {\n        return this.state.ltiRoles !== undefined && this.state.ltiRoles.includes(\"Instructor\");\n    }\n\n    render() {\n        if (this.state.httpErrors.length > 0)\n            return <div>{this.props.t(\"LTI.GENERIC_ERROR\", { message: this.state.httpErrors[0] })}</div>;\n        if (this.state.searchResults !== undefined && this.state.ltiRoles !== undefined) {\n            const sr = this.state.searchResults;\n            const headingOpts = {\n                range: {\n                    begin: Math.min(sr.offset + 1, sr.total),\n                    end: sr.offset + sr.limit\n                },\n                total: sr.total\n            };\n            return <>\n                <header>\n                    {this.state.deleteSuccess === true && <div className=\"alert alert-success\">\n                        {this.props.t(\"LTI.DELETION_SUCCESS\")}<br />\n                        <div className=\"text-muted\">{this.props.t(\"LTI.DELETION_SUCCESS_DESCRIPTION\")}</div>\n                    </div>}\n                    {this.state.deleteSuccess === false && <div className=\"alert alert-danger\">\n                        {this.props.t(\"LTI.DELETION_FAILURE\")}<br />\n                        <div className=\"text-muted\">{this.props.t(\"LTI.DELETION_FAILURE_DESCRIPTION\")}</div>\n                    </div>}\n                    {this.props.t(\"LTI.RESULT_HEADING\", headingOpts)}\n                </header>\n                <Helmet>\n                    <title>{this.props.t(\"LTI.SERIES_TITLE\")}</title>\n                </Helmet>\n                <div className=\"list-group\">\n                    {sr.results.map((episode) => <SeriesEpisode\n                        key={episode.id}\n                        episode={episode}\n                        deleteCallback={this.isInstructor() && this.hasDeletion() ? this.deleteEventCallback.bind(this) : undefined}\n                        editCallback={this.isInstructor() && this.hasEdit() ? this.editEpisodeCallback.bind(this) : undefined}\n                        t={this.props.t} />)}\n                </div>\n                <footer className=\"mt-3\">\n                    <Pagination\n                        activePage={this.state.currentPage}\n                        itemsCountPerPage={EPISONDES_PER_PAGE}\n                        totalItemsCount={sr.total}\n                        pageRangeDisplayed={5}\n                        itemClass=\"page-item\"\n                        linkClass=\"page-link\"\n                        innerClass=\"pagination justify-content-center\"\n                        onChange={this.handlePageChange.bind(this)}\n                    />\n                </footer>\n            </>\n        }\n        return <Loading t={this.props.t} />;\n    }\n}\n\nexport const Series = withTranslation()(TranslatedSeries);\n","import React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport {\n    EventMetadataField,\n    EventMetadataContainer,\n    EventMetadataCollection,\n    collectionToPairs\n} from \"../OpencastRest\";\nimport Select from \"react-select\";\nimport i18next from \"i18next\";\nimport { ValueType } from \"react-select/src/types\"; // tslint:disable-line no-submodule-imports\n\nimport CreatableSelect from \"react-select/creatable\";\n\nconst allowedFields = [\"title\", \"language\", \"license\", \"creator\"];\n\ninterface OptionType {\n    value: string;\n    label: string;\n}\n\ninterface EditFormProps extends WithTranslation {\n    readonly data: EventMetadataContainer;\n    readonly withUpload: boolean;\n    readonly onDataChange: (newData: EventMetadataContainer) => void;\n    readonly onPresenterFileChange: (file: Blob) => void;\n    readonly onCaptionFileChange: (file: Blob) => void;\n    readonly onSubmit: () => void;\n    readonly pending: boolean;\n    readonly hasSubmit: boolean;\n}\n\ninterface MetadataFieldProps {\n    readonly field: EventMetadataField;\n    readonly valueChange: (id: string, newValue: string | string[]) => void;\n    readonly t: i18next.TFunction;\n}\n\ninterface MetadataCollectionKey {\n    label: string;\n    order?: number;\n    selectable?: boolean;\n}\n\nfunction parseMetadataCollectionKey(s: string): MetadataCollectionKey {\n    if (!s.startsWith(\"{\"))\n        return { label: s };\n    return JSON.parse(s);\n}\n\nfunction collectionToOptions(collection: EventMetadataCollection, translatable: boolean, t: i18next.TFunction): OptionType[] {\n    return collectionToPairs(collection)\n        .map(([k, v]) => [parseMetadataCollectionKey(k).label, v])\n        .map(([k, v]) => [translatable ? t(k) : k, v])\n        .map(([k, v]) => ({ value: v, label: k }));\n}\n\nfunction MetadataFieldReadOnly(props: MetadataFieldProps) {\n    const field = props.field;\n    const t = props.t;\n    const style = { fontStyle: \"italics\" };\n    if (Array.isArray(field.value))\n        return <div style={style}>{field.value.join(\", \")}</div>\n    if (field.value === \"\")\n        return <div style={style}>{t(\"LTI.NO_OPTION_SELECTED\")}</div>;\n    if (field.collection !== undefined) {\n        const options: OptionType[] = collectionToOptions(field.collection, field.translatable, t);\n        const currentValue = options.find((o: OptionType) => o.value === field.value);\n        if (currentValue === undefined)\n            return <div style={style}>{t(\"LTI.NO_OPTION_SELECTED\")}</div>;\n        return <div style={style}>{currentValue.label}</div>;\n    }\n    return <div style={style}>{field.value}</div>;\n}\n\nfunction MetadataFieldInner(props: MetadataFieldProps) {\n    const field = props.field;\n    const t = props.t;\n    const valueChange = props.valueChange;\n    if (field.readOnly === true) {\n        return <MetadataFieldReadOnly {...props} />;\n    }\n    if (field.type === \"text\" && field.collection === undefined)\n        return <input\n            type=\"text\"\n            id={field.id}\n            className=\"form-control\"\n            value={field.value}\n            onChange={(e) => valueChange(field.id, e.currentTarget.value)} />;\n\n    if (field.collection !== undefined && field.type === \"mixed_text\") {\n        return <CreatableSelect\n            isMulti={true}\n            isClearable={true}\n            id={field.id}\n            value={(field.value as string[]).map((e) => ({ value: e, label: e }))}\n            onChange={(value: ValueType<OptionType>) =>\n                valueChange(\n                    field.id,\n                    value === undefined || value === null || !Array.isArray(value) ? [] : (value as OptionType[]).map((v) => v.value))} />;\n    }\n    if (field.collection !== undefined) {\n        const options: OptionType[] = collectionToOptions(field.collection, field.translatable, t);\n        const currentValue = options.find((o: OptionType) => o.value === field.value);\n        return <Select\n            id={field.id}\n            onChange={(value: ValueType<OptionType>) =>\n                valueChange(\n                    field.id,\n                    value === undefined || value === null || Array.isArray(value) ? \"\" : (value as OptionType).value)}\n            value={currentValue}\n            options={options}\n            placeholder={t(\"LTI.SELECT_OPTION\")} />\n    }\n    return <div>Cannot display control of type {field.type}</div>\n}\n\nfunction MetadataField(props: MetadataFieldProps) {\n    return <div className=\"form-group\">\n        <label htmlFor={props.field.id}>{props.t(props.field.label)}</label>\n        <MetadataFieldInner {...props} />\n    </div>;\n}\n\nclass TranslatedEditForm extends React.Component<EditFormProps> {\n    onChangePresenterFile(e: React.FormEvent<HTMLInputElement>) {\n        if (e.currentTarget.files === null)\n            return;\n        this.props.onPresenterFileChange(e.currentTarget.files[0]);\n    }\n\n    onChangeCaptionFile(e: React.FormEvent<HTMLInputElement>) {\n        if (e.currentTarget.files === null)\n            return;\n        this.props.onCaptionFileChange(e.currentTarget.files[0]);\n    }\n\n    fieldValueChange(id: string, newValue: string | string[]) {\n        this.props.onDataChange(\n            {\n                ...this.props.data,\n                fields: this.props.data.fields.map((field) => field.id !== id ? field : {\n                    ...field,\n                    value: newValue\n                })\n            }\n        );\n    }\n\n    render() {\n        return <form>\n            {this.props.data.fields\n                .filter((field) => allowedFields.includes(field.id))\n                .map((field) => <MetadataField\n                    key={field.id}\n                    t={this.props.t}\n                    field={field}\n                    valueChange={this.fieldValueChange.bind(this)} />)}\n            {this.props.withUpload === true &&\n                <div className=\"form-group\">\n                    <label htmlFor=\"presenter\">{this.props.t(\"LTI.PRESENTER\")}</label>\n                    <input type=\"file\" className=\"form-control-file\" onChange={this.onChangePresenterFile.bind(this)} />\n                    <small className=\"form-text text-muted\">{this.props.t(\"LTI.PRESENTER_DESCRIPTION\")}</small>\n                </div>\n            }\n            {this.props.withUpload === true &&\n                <div className=\"form-group\">\n                    <label htmlFor=\"caption\">{this.props.t(\"LTI.CAPTION\")}</label>\n                    <input type=\"file\" className=\"form-control-file\" onChange={this.onChangeCaptionFile.bind(this)} />\n                    <small className=\"form-text text-muted\">{this.props.t(\"LTI.CAPTION_DESCRIPTION\")}</small>\n                </div>\n            }\n            {this.props.hasSubmit === true &&\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={(_: any) => this.props.onSubmit()}\n                    disabled={this.props.pending}>\n                    {this.props.withUpload === true && this.props.t(this.props.pending ? \"LTI.UPLOADING\" : \"LTI.UPLOAD\")}\n                    {this.props.withUpload === false && this.props.t(this.props.pending ? \"LTI.EDITING\" : \"LTI.EDIT\")}\n                </button>}\n        </form>\n    }\n}\n\nexport const EditForm = withTranslation()(TranslatedEditForm);\n","import { Loading } from \"./Loading\";\nimport React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport {\n    getJobs,\n    JobResult,\n} from \"../OpencastRest\";\n\ninterface JobListProps extends WithTranslation {\n    readonly seriesId: string;\n}\n\ninterface JobListState {\n    readonly jobs?: JobResult[];\n    readonly jobsTimerId?: ReturnType<typeof setTimeout>;\n}\n\nclass TranslatedJobList extends React.Component<JobListProps, JobListState> {\n    constructor(props: JobListProps) {\n        super(props);\n        this.state = {};\n    }\n\n    retrieveJobs() {\n        getJobs(this.props.seriesId)\n            .then((jobs) => this.setState({\n                ...this.state,\n                jobs: jobs\n            })).catch((_) => this.setState({\n                ...this.state,\n                jobs: undefined\n            }));\n    }\n\n    jobsTimer() {\n        this.retrieveJobs();\n    }\n\n    componentDidMount() {\n        this.retrieveJobs();\n\n        const timerMillis = 30000;\n        /* eslint react/no-did-mount-set-state: \"off\" */\n        this.setState({\n            ...this.state,\n            jobsTimerId: setInterval(this.jobsTimer.bind(this), timerMillis),\n        });\n    }\n\n    componentWillUnmount() {\n        if (this.state.jobsTimerId !== undefined)\n            clearInterval(this.state.jobsTimerId);\n    }\n\n    render() {\n        if (this.state.jobs === undefined)\n            return <Loading t={this.props.t} />;\n        return <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>{this.props.t(\"LTI.JOB_TITLE\")}</th>\n                    <th>{this.props.t(\"LTI.JOB_STATUS\")}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.jobs.map((job) => <tr key={job.title}>\n                    <td>{job.title}</td>\n                    <td>{this.props.t(job.status)}</td>\n                </tr>)}\n            </tbody>\n        </table>;\n    }\n}\n\n\nexport const JobList = withTranslation()(TranslatedJobList);\n","import { ValueType } from \"react-select/src/types\"; // tslint:disable-line no-submodule-imports\nimport Select from \"react-select\";\nimport { Loading } from \"./Loading\";\nimport Helmet from \"react-helmet\";\nimport React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport {\n    uploadFile,\n    copyEventToSeries,\n    getEventMetadata,\n    EventMetadataContainer,\n    findField,\n    findFieldCollection,\n    collectionToPairs\n} from \"../OpencastRest\";\nimport { parsedQueryString } from \"../utils\";\nimport { EditForm } from \"./EditForm\";\nimport { JobList } from \"./JobList\";\n\ninterface OptionType {\n    value: string;\n    label: string;\n}\n\ninterface MetadataResult {\n    readonly initial: EventMetadataContainer;\n    readonly edited: EventMetadataContainer;\n    readonly seriesId: string;\n}\n\ninterface UploadState {\n    readonly eventId?: string;\n    readonly uploadState: \"success\" | \"error\" | \"pending\" | \"none\";\n    readonly metadata: MetadataResult | \"error\" | undefined;\n    readonly presenterFile?: Blob;\n    readonly captionFile?: Blob;\n    readonly copyState: \"success\" | \"error\" | \"pending\" | \"none\";\n    readonly copySeries?: OptionType;\n    readonly refreshTimerId?: ReturnType<typeof setTimeout>;\n}\n\nfunction isMetadata(\n    metadata: MetadataResult | \"error\" | undefined): metadata is MetadataResult {\n    return metadata !== undefined && typeof metadata !== \"string\";\n}\n\ninterface UploadProps extends WithTranslation {\n}\n\nclass TranslatedUpload extends React.Component<UploadProps, UploadState> {\n    constructor(props: UploadProps) {\n        super(props);\n        const qs = parsedQueryString();\n        this.state = {\n            eventId: typeof qs.episode_id === \"string\" ? qs.episode_id : undefined,\n            uploadState: \"none\",\n            copyState: \"none\",\n            metadata: undefined,\n        };\n    }\n\n    resolveSeries(metadata: EventMetadataContainer): string | undefined {\n        const qs = parsedQueryString();\n        // If we have a series ID in the query string, look no further.\n        if (typeof qs.series === \"string\")\n            return qs.series;\n        // Do we have a series ID in the event metadata?\n        const seriesField = findField(\"isPartOf\", metadata);\n        if (seriesField === undefined)\n            return;\n        const fieldValue = seriesField.value;\n        if (typeof fieldValue === \"string\" && fieldValue !== \"\")\n            return fieldValue;\n        // Otherwise, assume and resolve a series name instead of an ID.\n        if (typeof qs.series_name !== \"string\" || seriesField.collection === undefined)\n            return;\n        const pairs = collectionToPairs(seriesField.collection);\n        return pairs\n            .filter(([k, _]) => k === qs.series_name)\n            .map(([_, v]) => v)\n            .pop();\n    }\n\n    componentDidMount() {\n        getEventMetadata(this.state.eventId).then((metadataCollection) => {\n            if (metadataCollection.length > 0) {\n                const metadata = metadataCollection[0];\n                const seriesId = this.resolveSeries(metadata)\n                if (seriesId === undefined) {\n                    this.setState({\n                        ...this.state,\n                        metadata: \"error\"\n                    });\n                } else {\n                    this.setState({\n                        ...this.state,\n                        metadata: {\n                            initial: metadata,\n                            edited: metadata,\n                            seriesId: seriesId\n                        },\n                    });\n                }\n            }\n        }).catch((_) => this.setState({\n            ...this.state,\n            metadata: \"error\"\n        }));\n    }\n\n    onSubmit() {\n        if (!isMetadata(this.state.metadata))\n            return;\n        if (this.state.eventId === undefined && this.state.presenterFile === undefined)\n            return;\n        this.setState({\n            ...this.state,\n            uploadState: \"pending\"\n        });\n        console.log(\"onSubmit, seriesId: \" + this.state.metadata.seriesId);\n        uploadFile(\n            this.state.metadata.edited,\n            this.state.metadata.seriesId,\n            this.state.eventId,\n            this.state.presenterFile,\n            this.state.captionFile,\n        ).then((_) => {\n            if (!isMetadata(this.state.metadata))\n                return;\n            this.setState({\n                ...this.state,\n                uploadState: this.state.eventId === undefined ? \"success\" : \"none\"\n            });\n            if (this.state.eventId === undefined) {\n                this.setState({\n                    ...this.state,\n                    metadata: {\n                        ...this.state.metadata,\n                        edited: this.state.metadata.initial\n                    }\n                });\n            }\n        }).catch((_) => {\n            this.setState({\n                ...this.state,\n                uploadState: \"error\"\n            });\n        });\n    }\n\n    onCaptionFileChange(newFile: Blob) {\n        this.setState({\n            ...this.state,\n            captionFile: newFile\n        });\n    }\n\n    onPresenterFileChange(newFile: Blob) {\n        this.setState({\n            ...this.state,\n            presenterFile: newFile\n        });\n    }\n\n    onDataChange(newData: EventMetadataContainer) {\n        if (!isMetadata(this.state.metadata))\n            return;\n        this.setState({\n            ...this.state,\n            metadata: {\n                ...this.state.metadata,\n                edited: newData\n            }\n        });\n    }\n\n    seriesItems(): OptionType[] {\n        const metadata = this.state.metadata;\n        if (!isMetadata(metadata))\n            return [];\n        const seriesCollection = findFieldCollection(\"isPartOf\", metadata.edited);\n        if (seriesCollection === undefined)\n            return [];\n        const pairs = collectionToPairs(seriesCollection);\n        return pairs\n            .filter(([_, v]) => v !== metadata.seriesId)\n            .map(([k, v]) => ({ value: v, label: k }));\n    }\n\n    onMoveToSeries(_: any) {\n        const eventId = this.state.eventId;\n        if (eventId === undefined || this.state.copySeries === undefined)\n            return;\n        copyEventToSeries(eventId, this.state.copySeries.value).then((_) => {\n            this.setState({\n                ...this.state,\n                copyState: \"success\"\n            });\n        }).catch((_: any) => {\n            this.setState({\n                ...this.state,\n                copyState: \"error\"\n            });\n        });\n    }\n\n    onChangeCopyTarget(v: OptionType) {\n        this.setState({\n            ...this.state,\n            copySeries: v\n        });\n    }\n\n    render() {\n        if (this.state.metadata === undefined)\n            return <Loading t={this.props.t} />;\n        if (this.state.metadata === \"error\")\n            return <div>{this.props.t(\"LTI.ERROR_LOADING_METADATA\")}</div>;\n        const lockedString = this.state.metadata.edited.locked !== undefined ? \"LTI.EVENT_LOCKED\" : undefined;\n        return <>\n            <Helmet>\n                <title>{this.props.t(\"LTI.\" + (this.state.eventId === undefined ? \"UPLOAD_TITLE\" : \"EDIT_TITLE\"))}</title>\n            </Helmet>\n            <h2>{this.props.t(\"LTI.\" + (this.state.eventId === undefined ? \"NEW_UPLOAD\" : \"EDIT_UPLOAD\"))}</h2>\n            {lockedString !== undefined && <div className=\"alert alert-secondary\">\n                {this.props.t(lockedString)}<br />\n            </div>}\n            {this.state.uploadState === \"success\" && <div className=\"alert alert-success\">\n                {this.props.t(this.state.eventId === undefined ? \"LTI.UPLOAD_SUCCESS\" : \"LTI.EDIT_SUCCESS\")}<br />\n            </div>}\n            {this.state.uploadState === \"error\" && <div className=\"alert alert-danger\">\n                {this.props.t(this.state.eventId === undefined ? \"LTI.UPLOAD_FAILURE\" : \"LTI.EDIT_FAILURE\")}<br />\n                <div className=\"text-muted\">{this.props.t(\"LTI.UPLOAD_FAILURE_DESCRIPTION\")}</div>\n            </div>}\n            {this.state.copyState === \"success\" && <div className=\"alert alert-success\">\n                {this.props.t(\"LTI.COPY_SUCCESS\")}<br />\n                <div className=\"text-muted\">{this.props.t(\"LTI.COPY_SUCCESS_DESCRIPTION\")}</div>\n            </div>}\n            {this.state.copyState === \"error\" && <div className=\"alert alert-danger\">\n                {this.props.t(\"LTI.COPY_FAILURE\")}<br />\n                <div className=\"text-muted\">{this.props.t(\"LTI.COPY_FAILURE_DESCRIPTION\")}</div>\n            </div>}\n            <EditForm\n                withUpload={this.state.eventId === undefined}\n                data={this.state.metadata.edited}\n                onDataChange={this.onDataChange.bind(this)}\n                onPresenterFileChange={this.onPresenterFileChange.bind(this)}\n                onCaptionFileChange={this.onCaptionFileChange.bind(this)}\n                onSubmit={this.onSubmit.bind(this)}\n                hasSubmit={this.state.metadata.edited.locked === undefined}\n                pending={this.state.uploadState === \"pending\"} />\n            {this.state.eventId !== undefined && this.state.metadata.edited.locked === undefined &&\n                <>\n                    <h2>{this.props.t(\"LTI.COPY_TO_SERIES\")}</h2>\n                    <form>\n                        <div className=\"form-group\">\n                            <Select\n                                options={this.seriesItems()}\n                                isSearchable={true}\n                                value={this.state.copySeries}\n                                onChange={(value: ValueType<OptionType>) => this.onChangeCopyTarget(value as OptionType)}\n                                placeholder={this.props.t(\"LTI.SELECT_COPY_TARGET\")} />\n                        </div>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.onMoveToSeries.bind(this)}\n                            disabled={this.state.copyState === \"pending\" || this.state.copySeries === undefined}>\n                            {this.props.t(this.state.copyState === \"pending\" ? \"LTI.COPY_IN_PROGRESS\" : \"LTI.COPY\")}\n                        </button>\n                    </form>\n                </>\n            }\n            <h2>{this.props.t(\"LTI.CURRENT_JOBS\")}</h2>\n            <JobList seriesId={this.state.metadata.seriesId} />\n        </>;\n    }\n}\n\nexport const Upload = withTranslation()(TranslatedUpload);\n","import React from \"react\";\n\nexport function Welcome() {\n    return <>\n        <h1>Welcome to the LTI Module</h1>\n        <ul>\n            <li>More information about configuring LTI is available in the Administration Guide at <a href=\"https://docs.opencast.org\">docs.opencast.org</a></li>\n            <li>Here is <a href=\"/lti\">what we know about you and your context</a> from the tool consumer.</li>\n            <li>Here is <a href=\"/info/me.json\">your organization, role and user information</a>.</li>\n            <li>Published videos can be found in the <a href=\"/engage/ui/\">Media Module</a>.</li>\n            <li>For course integration, use the <a href=\"index.html?subtool=series\">Series LTI Tool</a>. Note that you can specify these parameters:</li>\n            <ul>\n                <li>Use the <code>?series=[series-id]</code> URL parameter to show just a single series.</li>\n                <li>Use the <code>?series_name=[series-name]</code> URL parameter to show just a single series. The series name has to be unique.</li>\n                <li>Use the <code>?deletion=true</code> URL parameter to show a deletion button next to each episode.</li>\n                <li>Use the <code>?edit=true</code> URL parameter to show an edit button next to each episode.</li>\n            </ul>\n            <li>For upload integration, use the <a href=\"index.html?subtool=upload\">Upload LTI Tool</a>. Note that you can specify these parameters:</li>\n            <ul>\n                <li>Use the <code>?series=[series-id]</code> URL parameter to set the series ID the upload belongs to.</li>\n                <li>Use the <code>?series_name=[series-name]</code> URL parameter to set the series name the upload belongs to. The series name has to be unique.</li>\n                <li>Use the <code>?episode_id=[episode-id]</code> URL parameter to set an episode ID (do not use other than for testing).</li>\n            </ul>\n        </ul>\n    </>;\n}\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport daJson from \"./i18n/lang-da_DK.json\";\nimport deJson from \"./i18n/lang-de_DE.json\";\nimport elJson from \"./i18n/lang-el_GR.json\";\nimport enJson from \"./i18n/lang-en_US.json\";\nimport esJson from \"./i18n/lang-es_ES.json\";\nimport frJson from \"./i18n/lang-fr_FR.json\";\nimport glJson from \"./i18n/lang-gl_ES.json\";\nimport heJson from \"./i18n/lang-he_IL.json\";\nimport itJson from \"./i18n/lang-it_IT.json\";\nimport nlJson from \"./i18n/lang-nl_NL.json\";\nimport plJson from \"./i18n/lang-pl_PL.json\";\nimport slJson from \"./i18n/lang-sl_SI.json\";\nimport svJson from \"./i18n/lang-sv_SE.json\";\nimport trJson from \"./i18n/lang-tr_TR.json\";\nimport zhJson from \"./i18n/lang-zh_CN.json\";\n\ni18n\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        // we init with resources\n        resources: {\n            en: {\n                translations: enJson\n            },\n            da: {\n                translations: daJson\n            },\n            de: {\n                translations: deJson\n            },\n            el: {\n                translations: elJson\n            },\n            es: {\n                translations: esJson\n            },\n            fr: {\n                translations: frJson\n            },\n            gl: {\n                translations: glJson\n            },\n            he: {\n                translations: heJson\n            },\n            it: {\n                translations: itJson\n            },\n            nl: {\n                translations: nlJson\n            },\n            pl: {\n                translations: plJson\n            },\n            sl: {\n                translations: slJson\n            },\n            sv: {\n                translations: svJson\n            },\n            tr: {\n                translations: trJson\n            },\n            zh: {\n                translations: zhJson\n            }\n        },\n        fallbackLng: \"en\",\n        debug: true,\n\n        // have a common namespace used around the full app\n        ns: [\"translations\"],\n        defaultNS: \"translations\",\n\n        interpolation: {\n            escapeValue: false\n        }\n    }).then((_) => console.log(\"i18n init complete\"), (_) => console.log(\"i18n init failed\"));\n\nexport default i18n;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Series } from \"./components/Series\";\nimport { Upload } from \"./components/Upload\";\nimport { Welcome } from \"./components/Welcome\";\nimport \"./i18n\";\nimport { parsedQueryString } from \"./utils\";\n\nfunction App() {\n    const qsParsed = parsedQueryString();\n    if (qsParsed.subtool === \"series\")\n        return <div className=\"container\"><Series /></div>;\n    if (qsParsed.subtool === \"upload\")\n        return <div className=\"container\"><Upload /></div>;\n    return <div className=\"container\"><Welcome /></div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}